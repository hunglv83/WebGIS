@model WebApp.Core.EF.CSF_Functions
@using WebApp.Core.DAO

@{
    ViewBag.Title = "THÊM MỚI CHỨC NĂNG";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title"><i class="fa fa-users"></i> Thông tin chi tiết</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    @using (Html.BeginForm("Create", "QT_Functions", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "Tên chức năng", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "Mô tả", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                        </div>
                        <div class="form-group">
                            @{
                                System.Collections.Generic.List<WebApp.Core.EF.CSF_Modules> mods = (System.Collections.Generic.List<WebApp.Core.EF.CSF_Modules>)TempData["modules"];
                            }
                            @Html.LabelFor(model => model.ModuleID, "Module", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.ModuleID, new SelectList(mods, "ID", "Name"), "---- Chọn module ----", htmlAttributes: new { style = "width:100%", @class = "form-control selectpicker select2 select2bs4", @data_live_search = "true", @required = "required", @data_validation_required_message = "Chưa chọn module" })
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                        </div>
                        <div class="form-group">
                            @{
                                List<SubSelectBox> funcs = (List<SubSelectBox>)TempData["functions"];
                            }
                            @Html.LabelFor(model => model.ParentID, "Chức năng cha", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.ParentID, new SelectList(funcs, "ID", "Name"), "---- Chọn chức năng ----", htmlAttributes: new { style = "width:100%", @class = "form-control selectpicker select2 select2bs4", @data_live_search = "true" })
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @{
                                System.Collections.Generic.List<string> controllers = (System.Collections.Generic.List<string>)TempData["listController"];
                            }
                            <label class="control-label">Controller</label>
                            <select id="listController" name="listController" class="form-control select2 select2bs4"  data-live-search="true">
                                <option value="0">Chọn Controller</option>
                                @if (controllers != null && controllers.Count > 0)
                                {
                                    for (int j = 0; j < controllers.Count; j++)
                                    {
                                        <option value="@controllers[j]">@controllers[j]</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Action</label>
                            <select id="listAction" name="listAction" class="form-control select2 select2bs4" disabled>
                                <option>Chọn Action</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-save"></i> Lưu lại</button>
                            <a class="btn btn-sm btn-outline-info" href="@Url.Content("~/Admin/QT_Functions/Index")"><i class="fa fa-reply"></i> Quay lại</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section jsFooter{
    <script src="@Url.Content("~/areas/admin/jscontroller/QT_Functions.js")"></script>
    <script src="@Url.Content("~/Scripts/JSBase/jqBootstrapValidation.js")"></script>
    <script>jQuery(function () { jQuery("input,select,textarea").not("[type=submit]").jqBootstrapValidation(); jQuery('.selectpicker').selectpicker("refresh"); });</script>
}
