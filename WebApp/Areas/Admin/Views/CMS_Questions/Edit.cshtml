@model WebApp.Core.EF.CMS_Questions
@using WebApp.Core.EF

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Sửa câu hỏi
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Nội dung
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "CMS_Questions", FormMethod.Post, new { @id = "createNews" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-3">
                                    @Html.LabelFor(model => model.TypeOfQuestionID, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-lg-9">
                                    <select id="@Html.IdFor(model => model.TypeOfQuestionID)" name="@Html.IdFor(model => model.TypeOfQuestionID)" class="form-control selectpicker" data-live-search="true" required>
                                        <option value="">Chọn thể loại</option>
                                        @if (TempData["TypeOfQuestionID"] != null)
                                        {
                                            List<CMS_TypeOfQuestion> lData = (List<CMS_TypeOfQuestion>)TempData["TypeOfQuestionID"];
                                            for (int i = 0; i < lData.Count; i++)
                                            {
                                                if (lData[i].ID == Model.TypeOfQuestionID)
                                                {
                                                    <option value="@lData[i].ID" selected>@lData[i].Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@lData[i].ID">@lData[i].Name</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.TypeOfQuestionID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextAreaFor(model => model.Contents, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextAreaFor(model => model.Answer, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-3">
                                        @Html.TextBoxFor(model => model.FileName, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-xs-6">
                                        <button class="btn btn-default" type="button" onclick="chooseFile()">Chọn file</button>
                                        <button class="btn btn-danger" title="Xóa file" onclick="removeFile()" type="button"><i class="fas fa-minus"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" name="@Html.IdFor(model => model.Publish)" value="@Html.ValueFor(m => m.Publish)" @(Convert.ToBoolean(Model.Publish) == true ? "checked" : "")>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-12 text-center">
                                    <input type="submit" value="Lưu" class="btn btn-primary" />
                                    <a class="btn btn-default" href="@Url.Content("~/admin/CMS_Questions")">Quay lại</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section jsFooter{
    <script src="@Url.Content("~/ckeditor/ckeditor.js")" type="text/javascript"></script>
    <script>
        CKEDITOR.replace(@Html.IdFor(model => model.Contents));
        CKEDITOR.replace(@Html.IdFor(model => model.Answer));
        jQuery('#createNews').on('submit', function () {
            for (instance in CKEDITOR.instances) {
                CKEDITOR.instances[instance].updateElement();
            }
        });
        function chooseFile() {
            // You can use the "CKFinder" class to render CKFinder in a page:
            var finder = new CKFinder();
            finder.basePath = '~/ckfinder';	// The path for the installation of CKFinder (default = "/ckfinder/").
            finder.selectActionFunction = SetFileField1;
            finder.popup();
        }
        // This is a sample function which is called when a file is selected in CKFinder.
        function SetFileField1(fileUrl) {
            jQuery('#@Html.IdFor(model => model.FileName)').val(fileUrl);
        }
    </script>
    <script src="@Url.Content("~/areas/admin/jscontroller/CMS_Questions.js")"></script>
}